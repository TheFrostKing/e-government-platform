{"ast":null,"code":"var _jsxFileName = \"/home/frosty/Desktop/egov-g4/src/Templates/address.js\",\n  _s = $RefreshSig$();\nimport httpClient from '../httpClients.ts';\nimport Navbar from './nav_loggedin';\nimport Cookies from 'js-cookie';\nimport { useMemo, useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { ListGroup } from 'react-bootstrap';\nimport { Card } from 'react-bootstrap';\nimport EasyEdit, { Types } from 'react-easy-edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SetAddress() {\n  _s();\n  const saveCountry = value => {\n    myData.country = value;\n  };\n  const saveCity = value => {\n    myData.city = value;\n  };\n  const saveStreet = value => {\n    myData.street = value;\n  };\n  const myData = useMemo(() => ({\n    country: \"\",\n    city: \"\",\n    street: \"\"\n  }), []);\n  const cancel = () => {\n    console.log(\"Cancelled\");\n  };\n  const [message, setMessage] = useState([{}]);\n  useEffect(() => {\n    httpClient.get(\"https://g4gov.com:444/user\").then(response => {\n      setMessage(response.data);\n      myData.country = response.data.country;\n      myData.city = response.data.city;\n      myData.street = response.data.street;\n      console.log(response.data);\n    }).catch(error => {\n      if (error.response.status === 401) {\n        window.location.href = \"/login\";\n        Cookies.remove('session');\n      }\n    });\n  }, [myData]);\n  const UpdateAddress = () => {\n    try {\n      httpClient.post(\"https://g4gov.com:444/change/address\", myData);\n    } catch (error) {\n      error.log(error);\n      if (error.response.status === 401) {\n        alert(\"Invalid credentials\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-0 start-0\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"BSN: \", message.bsn]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(EasyEdit, {\n              type: Types.TEXT,\n              placeholder: message.city,\n              onSave: saveCity,\n              onCancel: cancel,\n              attributes: {\n                name: \"awesome-input\",\n                id: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(EasyEdit, {\n              type: Types.TEXT,\n              placeholder: message.country,\n              onSave: saveCountry,\n              onCancel: cancel,\n              attributes: {\n                name: \"awesome-input\",\n                id: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(EasyEdit, {\n              type: Types.TEXT,\n              placeholder: message.street,\n              onSave: saveStreet,\n              onCancel: cancel,\n              attributes: {\n                name: \"awesome-input\",\n                id: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"button\",\n        onClick: () => UpdateAddress(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(SetAddress, \"0OtiSmGdGjKKVLiN3rlxnb89xEc=\");\n_c = SetAddress;\nexport default SetAddress;\nvar _c;\n$RefreshReg$(_c, \"SetAddress\");","map":{"version":3,"names":["httpClient","Navbar","Cookies","useMemo","useEffect","useState","Button","ListGroup","Card","EasyEdit","Types","SetAddress","saveCountry","value","myData","country","saveCity","city","saveStreet","street","cancel","console","log","message","setMessage","get","then","response","data","catch","error","status","window","location","href","remove","UpdateAddress","post","alert","width","bsn","TEXT","name","id"],"sources":["/home/frosty/Desktop/egov-g4/src/Templates/address.js"],"sourcesContent":["import httpClient from '../httpClients.ts';\nimport Navbar from './nav_loggedin';\nimport Cookies from 'js-cookie';\nimport { useMemo, useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { ListGroup } from 'react-bootstrap';\nimport { Card } from 'react-bootstrap';\nimport EasyEdit, {Types} from 'react-easy-edit';\n\nfunction SetAddress() {\n    const saveCountry = (value) => {myData.country=value}\n    const saveCity = (value) => {myData.city=value}\n    const saveStreet = (value) => {myData.street=value}\n  \n    const myData = useMemo(() => ({\n      country: \"\",\n      city: \"\",\n      street: \"\"\n    }), []);\n    \n    \n    const cancel = () => {console.log(\"Cancelled\")}\n    const [message, setMessage] = useState([{}]);\n    \n\n    useEffect(()  => {\n        httpClient.get(\"https://g4gov.com:444/user\").then(response => {\n        setMessage(response.data)\n        myData.country = response.data.country\n        myData.city = response.data.city\n        myData.street = response.data.street\n        console.log(response.data)\n    })\n    .catch(error => {\n        if (error.response.status === 401){\n             window.location.href = \"/login\"\n             Cookies.remove('session')\n        }\n    })\n\n    }, [myData]);\n\n    const UpdateAddress = () => {\n\n        try {\n          httpClient.post(\"https://g4gov.com:444/change/address\", myData);\n          \n        } catch (error) {\n          error.log(error)\n          if (error.response.status === 401) {\n            alert(\"Invalid credentials\");\n    \n          }\n        }\n    \n      };\n    \n    return (\n        <div className=\"\"> <Navbar></Navbar>\n        <div className=\"top-0 start-0\">\n    \n            <Card style={{ width: '18rem'}}>\n                    \n                    <ListGroup>\n                    <ListGroup.Item>BSN: {message.bsn}</ListGroup.Item>\n\n<ListGroup.Item><EasyEdit\n      type={Types.TEXT}\n      placeholder={message.city}\n      onSave={saveCity}\n      onCancel={cancel}\n      attributes={{ name: \"awesome-input\", id: 1}}/></ListGroup.Item>\n\n<ListGroup.Item><EasyEdit\n      type={Types.TEXT}\n      placeholder={message.country}\n      onSave={saveCountry}\n      onCancel={cancel}\n      attributes={{ name: \"awesome-input\", id: 1}}/></ListGroup.Item>\n\n<ListGroup.Item><EasyEdit\n      type={Types.TEXT}\n      placeholder={message.street}\n      onSave={saveStreet}\n      onCancel={cancel}\n      attributes={{ name: \"awesome-input\", id: 1}}/></ListGroup.Item>\n\n                    </ListGroup>\n            </Card>\n\n             <Button variant=\"primary\" type=\"button\" onClick={() => UpdateAddress()}>Submit</Button>\n\n        </div>\n    </div>\n\n        \n    )\n}\n    \nexport default SetAddress\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}